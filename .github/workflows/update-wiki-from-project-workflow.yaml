name: "Update US table in Wiki"
on:
  workflow_call:
    inputs:
      org:
        required: true
        type: string
      project_number:
        required: true
        type: string
      wiki_page:
        required: true
        type: string
      start_marker:
        required: false
        type: string
        default: "<!-- US_TABLE_START -->"
      end_marker:
        required: false
        type: string
        default: "<!-- US_TABLE_END -->"
      profile_label:
        required: true
        type: string
      epic_label:
        required: true
        type: string

jobs:
  update-wiki:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - id: app
        name: 🔐 GitHub App token
        uses: avenirs-esr/avenirs-workflows/.github/actions/github-app-token@main
        with:
          app_id: ${{ secrets.WIKI_APP_ID }}
          app_private_key: ${{ secrets.WIKI_APP_TOKEN }}
          owner: ${{ inputs.org }}

      - name: ✍️ Generate table (US)
        uses: avenirs-esr/avenirs-workflows/.github/actions/project-to-markdown@feat/522-wiki-automation
        with:
          token:          ${{ steps.app.outputs.app-token }}
          org:            ${{ inputs.org }}
          project_number: ${{ inputs.project_number }}
          profile_label:   ${{ inputs.profile_label }}
          epic_label:     ${{ inputs.epic_label }}
          out_file:       US_TABLE.md

      - name: 📥 Clone wiki of caller repo
        env:
          TOKEN: ${{ steps.app.outputs.app-token }}
        run: |
          git config --global user.name  "${{ steps.app.outputs.app-slug || 'avenirs-wiki-bot' }}[bot]"
          git config --global user.email "${{ steps.app.outputs.app-slug || 'avenirs-wiki-bot' }}[bot]@users.noreply.github.com"
          git clone "https://x-access-token:${TOKEN}@github.com/${{ github.repository }}.wiki.git" wiki

      - name: 🔄️ Replace section in page
        env:
          START: ${{ inputs.start_marker }}
          END:   ${{ inputs.end_marker }}
          PAGE:  ${{ inputs.wiki_page }}
        run: |
          set -euo pipefail

          test -f "wiki/$PAGE" || { echo -e "# Page\n\n$START\n$END\n" > "wiki/$PAGE"; }

          ALL="ALL_TABLES.md"
          if [ -d epic_tables ]; then
          : > "$ALL"
          ls -1v epic_tables/epic-*.md 2>/dev/null | xargs -r -I{} sh -c 'echo; cat "{}"' >> "$ALL"
          if [ -f epic_tables/epic-none.md ]; then
          echo >> "$ALL"
          cat epic_tables/epic-none.md >> "$ALL"
          fi
          elif [ -f US_TABLE.md ]; then
          cp US_TABLE.md "$ALL"
          else
          : > "$ALL"
          fi

          awk -v start="$START" -v end="$END" -v replfile="$ALL" '
          BEGIN{inblock=0}
          {
            if (index($0,start)) {
            print $0
            while ((getline l < replfile) > 0) print l
            close(replfile)
            inblock=1
            next
          }
            if (index($0,end)) { inblock=0 }
            if (!inblock) print $0
          }' "wiki/$PAGE" > wiki/_tmp.md

          mv wiki/_tmp.md "wiki/$PAGE"

      - name: 📤 Commit & push
        working-directory: wiki
        run: |
          git add "${{ inputs.wiki_page }}"
                git commit -m "chore(wiki): update US table" || echo "No changes"
                git push
