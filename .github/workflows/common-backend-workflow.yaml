name: Common Backend Workflow

on:
  workflow_call:
    inputs:
      run_lint:
        type: boolean
        default: true
      run_security_scan:
        type: boolean
        default: true
      run_test_coverage:
        type: boolean
        default: true
      page_title:
        type: string
        default: "${{ github.event.repository.name }} - Documentation"
      lint_fail_on_error:
        type: boolean
        default: true
      security_fail_on_critical:
        type: boolean
        default: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}
      - name: 📤 Upload Templates
        uses: avenirs-esr/avenirs-workflows/.github/actions/upload-templates@fix/core-upload-templates
  lint:
    if: ${{ inputs.run_lint }}
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}
      - name: 🔎 Lint code
        uses: avenirs-esr/avenirs-workflows/.github/actions/linting-scan@main
        with:
          fail_if_unformatted: ${{ inputs.lint_fail_on_error }}
      - name: 📦 Save Linting Report
        if: ${{ hashFiles('lint/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: lint

  security_scan:
    if: ${{ inputs.run_security_scan }}
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}
      - name: 🔒 Security scan
        uses: avenirs-esr/avenirs-workflows/.github/actions/security-scan@main
        with:
          fail_on_critical: ${{ inputs.security_fail_on_critical }}
      - name: 📦 Save Security Report
        if: ${{ hashFiles('dependency-check-report/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: dependency-check-report

  test_coverage:
    if: ${{ inputs.run_test_coverage }}
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}
      - name: ⬆️ Grant execution permissions for Maven Wrapper
        run: chmod +x ./mvnw
      - name: 🧪 Run tests and generate coverage report
        uses: avenirs-esr/avenirs-workflows/.github/actions/unit-tests-and-code-coverage@main
        with:
          ignore_ssl_verification: "true"
          import_certificate_from_localhost: "false"
      - name: 📦 Save JaCoCo Report
        if: ${{ hashFiles('jacoco-report/**') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: jacoco-report

  publish_to_gh_pages:
    if: ${{ inputs.run_lint || inputs.run_security_scan || inputs.run_test_coverage }}
    runs-on: ubuntu-latest
    needs: [ setup, lint, security_scan, test_coverage ]
    steps:
      - name: ✅ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.head_ref }}
      - name: 📥 Download Security Report
        if: ${{ inputs.run_security_scan }}
        uses: actions/download-artifact@v4
        with:
          name: security-report
          path: dependency-check-report
      - name: 📥 Download Linting Report
        if: ${{ inputs.run_lint }}
        uses: actions/download-artifact@v4
        with:
          name: lint-report
          path: lint
      - name: 📥 Download JaCoCo Report
        if: ${{ inputs.run_test_coverage }}
        uses: actions/download-artifact@v4
        with:
          name: jacoco-report
          path: jacoco-report
      - name: 📦 Publish reports to GitHub Pages
        uses: avenirs-esr/avenirs-workflows/.github/actions/publish-to-gh-pages@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          page_title: ${{ inputs.page_title }}
