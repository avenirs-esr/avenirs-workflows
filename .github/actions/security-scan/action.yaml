name: "Security Scan with Trivy"
description: "Analyse les dépendances (Java ou Node.js) avec Trivy et génère un rapport HTML"
inputs:
  fail_on_critical:
    description: "Echouer si des vulnérabilités critiques sont détectées (true/false)"
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Setup Trivy
      uses: avenirs-esr/avenirs-workflows/.github/actions/setup-trivy@feat/core-actions-workflows

    - name: Detect Project Type
      uses: avenirs-esr/avenirs-workflows/.github/actions/detect-project-type@feat/core-actions-workflows

    - name: Security Scan with Trivy (Java)
      if: env.project_type == 'java'
      run: |
        mkdir -p dependency-check-report
        trivy fs --security-checks vuln --exit-code 0 --format template --template "@/contrib/html.tpl" -o dependency-check-report/security-report.html .
        echo "Trivy security report for Java generated."
      shell: bash

    - name: Security Scan with Trivy (Node.js)
      if: env.project_type == 'node'
      run: |
        mkdir -p dependency-check-report
        trivy fs --security-checks vuln --exit-code 0 --format template --template "@/contrib/html.tpl" -o dependency-check-report/security-report.html .
        echo "Trivy security report for Node.js generated."
      shell: bash

    - name: Afficher le résumé du rapport
      run: |
        echo "Résumé du rapport de sécurité :"
        if [ -f "dependency-check-report/security-report.html" ]; then
          echo "Voir le rapport complet dans dependency-check-report/security-report.html."
        else
          echo "Aucun rapport de sécurité trouvé."
        fi
      shell: bash
