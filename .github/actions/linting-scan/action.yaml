name: "Code Formatting (Java, JavaScript, TypeScript)"
description: "Vérifie si le code Java, JavaScript et TypeScript est correctement formaté sans le modifier automatiquement"
inputs:
  fail_if_unformatted:
    description: "Echoue si du code n'est pas correctement formaté (true/false)"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: 💻 Detect Project Type
      id: detect_project_type
      uses: avenirs-esr/avenirs-workflows/.github/actions/detect-project-type@main

    - name: 📜 Initialize HTML Report
      if: env.project_type == 'java'
      run: |
        mkdir -p lint
        echo "<html><head><title>Linting Report</title></head><body>" > lint/formatting-report.html
      shell: bash

    - name: 🔧 Install Google Java Format (Java)
      if: env.project_type == 'java'
      uses: avenirs-esr/avenirs-workflows/.github/actions/setup-google-java-format@main

    - name: 🔎 Check Java Code Formatting (google-java-format)
      if: env.project_type == 'java'
      run: |
        echo "Vérification du format Java avec Google Java Format..."
        echo "<h2>Vérification du format Java</h2><ul>" >> lint/formatting-report.html
        has_unformatted=false

        for file in $(git ls-files -- '*.java'); do
            echo "Vérification du format : $file"
            if ! java -jar google-java-format.jar --dry-run --set-exit-if-changed "$file"; then
              echo "❌ Fichier mal formaté : $file"
              git diff -- "$file" || true
              has_unformatted=true

              echo "<li><strong>$file</strong><pre>" >> lint/formatting-report.html
              git diff -- "$file" >> lint/formatting-report.html
            fi
          done

        if [ "$has_unformatted" = true ]; then
          echo "</ul><p><strong>🚫 Des fichiers Java sont mal formatés.</strong></p></body></html>" >> lint/formatting-report.html
          exit 1
        else
          echo "</ul><p><strong>✅ Tout le code Java est correctement formaté.</strong></p></body></html>" >> lint/formatting-report.html
        fi
      shell: bash

    - name: 🔧 Set up Node.js 22 and install dependencies
      if: env.project_type == 'node'
      uses: avenirs-esr/avenirs-workflows/.github/actions/setup-node@main

    - name: 🧹 Run ESLint
      if: env.project_type == 'node'
      run: |
        if [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ]; then
          echo "Running ESLint..."
          npm run lint
        else
          echo "ESLint configuration not found. Skipping."
        fi
      shell: bash
